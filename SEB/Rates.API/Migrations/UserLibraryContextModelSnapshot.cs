// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rates.API.DbContexts;

namespace Rates.API.Migrations
{
    [DbContext(typeof(UserLibraryContext))]
    partial class UserLibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Rates.API.Entities.Agreement", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("BaseRateCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<decimal>("Margin")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("NewBaseRateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Agreements");

                    b.HasData(
                        new
                        {
                            Id = 1m,
                            Amount = 12000,
                            BaseRateCode = "VILIBOR3m",
                            Duration = 60,
                            Margin = 1.6m,
                            UserId = 67812203006m
                        },
                        new
                        {
                            Id = 2m,
                            Amount = 8000,
                            BaseRateCode = "VILIBOR1y",
                            Duration = 36,
                            Margin = 2.2m,
                            UserId = 78706151287m
                        },
                        new
                        {
                            Id = 3m,
                            Amount = 1000,
                            BaseRateCode = "VILIBOR6m",
                            Duration = 24,
                            Margin = 1.85m,
                            UserId = 78706151287m
                        });
                });

            modelBuilder.Entity("Rates.API.Entities.User", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 67812203006m,
                            FirstName = "Goras",
                            LastName = "Trusevičius"
                        },
                        new
                        {
                            Id = 78706151287m,
                            FirstName = "Dangė",
                            LastName = "Kulkavičiutė"
                        });
                });

            modelBuilder.Entity("Rates.API.Entities.Agreement", b =>
                {
                    b.HasOne("Rates.API.Entities.User", "User")
                        .WithMany("Agreements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
